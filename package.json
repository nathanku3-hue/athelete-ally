{
  "name": "athlete-ally",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "packageManager": "npm@10.9.3",
  "engines": {
    "node": ">=20.18.0 <21.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "preinstall": "node scripts/check-node-version.js",
    "dev": "next dev apps/frontend -p 3000",
    "dev:frontend": "next dev apps/frontend -p 3000",
    "dev:bff": "npm run dev -w apps/gateway-bff",
    "dev:all:local": "node scripts/start-local-dev.js",
    "build": "next build apps/frontend",
    "start": "next start apps/frontend",
    "lint": "eslint",
    "lint:ci": "eslint",
    "validate:ids": "tsx scripts/validate-ids.ts",
    "check:nohub": "tsx scripts/check-no-hub-edits.ts",
    "type-check": "tsc --noEmit",
    "prisma:generate": "bash ./scripts/generate-prisma-clients.sh",
    "test": "jest --projects jest/jest.projects.cjs",
    "test:projects": "jest --projects jest/jest.projects.cjs",
    "test:frontend": "jest --config jest/jest.config.frontend.cjs",
    "test:services": "jest --config jest/jest.config.services.cjs",
    "test:integration": "jest --config jest/jest.config.integration.cjs",
    "test:unit": "jest --testPathPatterns=__tests__/unit",
    "test:integration:full": "npx tsx scripts/run-integration-tests.ts",
    "test:e2e": "jest --testPathPatterns=__tests__/e2e",
    "test:e2e:watch": "jest --testPathPatterns=__tests__/e2e --watch",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:performance": "jest --testPathPatterns=__tests__/performance",
    "test:api": "jest --testPathPatterns=__tests__/integration/api-integration.test.ts",
    "test:api:watch": "jest --testPathPatterns=__tests__/integration/api-integration.test.ts --watch",
    "test:frontend:watch": "jest --config jest/jest.config.frontend.cjs --watch",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:health": "npx tsx scripts/test-health-endpoints.ts",
    "test:ci": "npm run test:coverage && npm run test:api && npm run test:frontend",
    "benchmark:planning": "node scripts/performance-benchmark.js",
    "turbo": "turbo",
    "check-ports": "npx tsx scripts/check-ports.ts",
    "infra:up": "powershell -ExecutionPolicy Bypass -File ./scripts/infra-up.ps1",
    "infra:down": "powershell -ExecutionPolicy Bypass -File ./scripts/infra-down.ps1",
    "infra:clean": "./scripts/infra-clean.sh",
    "infra:status": "powershell -ExecutionPolicy Bypass -File ./scripts/infra-status.ps1",
    "validate-environment": "npx tsx scripts/validate-environment.ts",
    "predev": "npm run validate-environment && npx tsx ./scripts/check-ports.ts 3000",
    "dev:check": "npm run validate-environment && npm run check-ports && npm run dev",
    "build:all": "npm run build:infra && turbo run build",
    "test:all:workspace": "turbo run test",
    "type-check:all": "turbo run type-check",
    "lint:all": "turbo run lint",
    "lint:boundaries": "npx eslint . --config config/linting/eslint.config.strict.mjs",
    "lint:boundaries:changed": "powershell -ExecutionPolicy Bypass -File scripts/check-boundaries-new-files.ps1",
    "test:container": "docker compose -f docker-compose/preview.yml run --rm",
    "preview:check": "npx tsx scripts/check-ports.ts",
    "preview:up": "npm run validate-env && npm run preview:check && docker compose -f docker-compose/preview.yml up --build",
    "preview:down": "docker compose -f docker-compose/preview.yml down -v",
    "build:prod": "npm run validate-env && npm run type-check && npm run lint && npm run build",
    "config:validate": "node scripts/validate-config.js",
    "config:check": "npm run config:validate",
    "config:test": "node scripts/test-config-integration.js",
    "config:test-integration": "npm run config:test",
    "config:validate-contract": "node scripts/validate-config-contract.js",
    "config:debug": "node scripts/debug-config-integration.js",
    "env:validate": "npx tsx scripts/validate-environment.ts",
    "env:check": "npm run env:validate",
    "dev:start": "powershell -ExecutionPolicy Bypass -File scripts/start-dev.ps1",
    "dev:start:unix": "bash scripts/start-dev.sh",
    "dev:quick": "node scripts/quick-start.js",
    "dev:quick:start": "npm run dev:quick",
    "dev:monitor": "node scripts/dev-monitor.js",
    "dev:watch": "npm run dev:monitor",
    "test:suite:validate": "node scripts/validate-test-suite.js",
    "test:suite:100": "npm run test:suite:validate",
    "db:test": "node scripts/test-db-connection.js",
    "redis:test": "node scripts/test-redis-connection.js",
    "services:health-check": "node scripts/health-check-all.js",
    "smoke:alpha": "node scripts/smoke-alpha.js",
    "hooks:enable": "git config core.hooksPath .githooks",
    "e2e:pw": "playwright test",
    "e2e:pw:ci": "playwright test --project=chromium --reporter=dot",
    "validate:schemas": "node scripts/validate-schemas.js",
    "dev:compose": "docker compose up --build",
    "dev:compose:obs": "docker compose --profile obs up --build",
    "lint:json": "node scripts/json-lint.js monitoring/grafana/dashboards/normalize-sleep.json docs/examples/soak_sleep_summary.example.json",
    "lint:yaml": "node scripts/yaml-lint.js monitoring/alert_rules.yml",
    "build:infra": "npm run build:openapi && npm run build:alerts && npm run build:docs && npm run build:registry",
    "build:openapi": "tsx scripts/build-openapi.ts",
    "build:alerts": "tsx scripts/build-alerts.ts",
    "build:docs": "tsx scripts/build-docs-index.ts",
    "build:registry": "tsx scripts/build-registry.ts"
  },
  "lint-staged": {
    "**/*.{ts,js,json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@tanstack/react-query-devtools": "^5.87.4",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "critters": "^0.0.23",
    "dotenv": "^16.6.1",
    "idb": "^8.0.3",
    "immer": "^10.1.3",
    "lucide-react": "^0.542.0",
    "react": "^18",
    "react-dom": "^18",
    "socket.io-client": "^4.8.1",
    "tailwind-merge": "^3.3.1",
    "zod": "^3.25.76",
    "zustand": "^5.0.8"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@playwright/test": "^1.55.1",
    "@tanstack/react-query": "^5.87.4",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/aria-query": "^5.0.4",
    "@types/jest": "^29.5.14",
    "@types/jsdom": "^21.1.7",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "autoprefixer": "^10.4.19",
    "dependency-cruiser": "^17.0.1",
    "eslint": "^8",
    "eslint-config-next": "^14",
    "eslint-plugin-boundaries": "^5.0.1",
    "eslint-plugin-import": "^2.32.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-junit": "^16.0.0",
    "jsdom": "^27.0.0",
    "lint-staged": "16.2.3",
    "madge": "^8.0.0",
    "next": "^15.5.3",
    "postcss": "^8.4.38",
    "prettier": "^3.6.2",
    "tailwindcss": "^3.4.3",
    "ts-node": "^10.9.2",
    "tsx": "^4.16.2",
    "turbo": "^2.0.3",
    "typescript": "^5.9.2"
  },
  "overrides": {
    "@prisma/client": "^5.22.0",
    "tsx": "^4.16.2",
    "jest": "^29.7.0",
    "fastify": "^4.28.1",
    "ioredis": "^5.4.1",
    "nats": "^2.19.0",
    "@opentelemetry/api": "1.7.0",
    "@opentelemetry/sdk-node": "0.45.1",
    "@opentelemetry/exporter-prometheus": "0.45.1"
  },
  "workspaces": [
    "apps/*",
    "services/*",
    "packages/*"
  ]
}
