{
  "name": "athlete-ally",
  "version": "0.1.0",
  "private": true,
  "packageManager": "npm@10.9.3",
  "engines": {
    "node": ">=20.18.0 <21.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "preinstall": "node scripts/check-node-version.js",
    "dev": "next dev apps/frontend -p 3000",
    "dev:frontend": "next dev apps/frontend -p 3000",
    "dev:bff": "npm run dev -w apps/gateway-bff",
    "dev:all:local": "node scripts/start-local-dev.js",
    "build": "next build apps/frontend",
    "start": "next start apps/frontend",
    "lint": "eslint",
    "lint:strict": "eslint --max-warnings 0",
    "lint:ci": "eslint",
    "lint:all": "turbo run lint",
    "lint:boundaries": "npx eslint . --config config/linting/eslint.config.strict.mjs",
    "lint:boundaries:changed": "powershell -ExecutionPolicy Bypass -File scripts/check-boundaries-new-files.ps1",
    "lint:json": "node scripts/json-lint.js monitoring/grafana/dashboards/normalize-sleep.json docs/examples/soak_sleep_summary.example.json",
    "lint:yaml": "node scripts/yaml-lint.js monitoring/alert_rules.yml",
    "type-check": "tsc --noEmit",
    "type-check:all": "turbo run type-check",
    "build:openapi": "tsx scripts/build-openapi.ts",
    "build:alerts": "tsx scripts/build-alerts.ts",
    "build:docs": "tsx scripts/build-docs-index.ts",
    "build:registry": "tsx scripts/build-registry.ts",
    "build:dashboards-index": "node scripts/ops/dashboards-index.mjs",
    "build:infra": "npm run build:openapi && npm run build:alerts && npm run build:docs && npm run build:registry && npm run build:dashboards-index",
    "build:all": "npm run build:infra && turbo run build",
    "validate:ids": "tsx scripts/validate-ids.ts",
    "check:nohub": "tsx scripts/check-no-hub-edits.ts",
    "verify:dashboards-index": "npm run build:dashboards-index && git diff --exit-code -- monitoring/grafana/dashboards/index.json",
    "format:check": "npx prettier --check .",
    "format:write": "npx prettier --write .",
    "prepare": "husky install",
    "scan:unused": "node scripts/ops/scan-unused-code.mjs",
    "build:reserved": "tsx scripts/dev/update-reserved-ids.ts",
    "dev:hubs:assume": "tsx scripts/dev/hubs-assume-unchanged.ts",
    "dev:hubs:track": "tsx scripts/dev/hubs-track.ts",
    "prisma:generate": "bash ./scripts/generate-prisma-clients.sh",
    "test": "jest --projects jest/jest.projects.cjs",
    "test:projects": "jest --projects jest/jest.projects.cjs",
    "test:frontend": "jest --config jest/jest.config.frontend.cjs",
    "test:services": "jest --config jest/jest.config.services.cjs",
    "test:integration": "jest --config jest/jest.config.integration.cjs",
    "test:unit": "jest --testPathPatterns=__tests__/unit",
    "test:integration:full": "npx tsx scripts/run-integration-tests.ts",
    "test:e2e": "jest --testPathPatterns=__tests__/e2e",
    "test:e2e:watch": "jest --testPathPatterns=__tests__/e2e --watch",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:performance": "jest --testPathPatterns=__tests__/performance",
    "test:api": "jest --testPathPatterns=__tests__/integration/api-integration.test.ts",
    "test:api:watch": "jest --testPathPatterns=__tests__/integration/api-integration.test.ts --watch",
    "test:frontend:watch": "jest --config jest/jest.config.frontend.cjs --watch",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:health": "npx tsx scripts/test-health-endpoints.ts",
    "test:ci": "npm run test:coverage && npm run test:api && npm run test:frontend",
    "test:all:workspace": "turbo run test",
    "test:suite:validate": "node scripts/validate-test-suite.js",
    "test:suite:100": "npm run test:suite:validate",
    "test:container": "docker compose -f docker-compose/preview.yml run --rm",
    "benchmark:planning": "node scripts/performance-benchmark.js",
    "turbo": "turbo",
    "check-ports": "npx tsx scripts/check-ports.ts",
    "infra:up": "powershell -ExecutionPolicy Bypass -File ./scripts/infra-up.ps1",
    "infra:down": "powershell -ExecutionPolicy Bypass -File ./scripts/infra-down.ps1",
    "infra:clean": "./scripts/infra-clean.sh",
    "infra:status": "powershell -ExecutionPolicy Bypass -File ./scripts/infra-status.ps1",
    "validate-environment": "npx tsx scripts/validate-environment.ts",
    "predev": "npm run validate-environment && npx tsx ./scripts/check-ports.ts 3000",
    "dev:check": "npm run validate-environment && npm run check-ports && npm run dev",
    "preview:check": "npx tsx scripts/check-ports.ts",
    "preview:up": "npm run validate-env && npm run preview:check && docker compose -f docker-compose/preview.yml up --build",
    "preview:down": "docker compose -f docker-compose/preview.yml down -v",
    "build:prod": "npm run validate-env && npm run type-check && npm run lint && npm run build",
    "config:validate": "node scripts/validate-config.js",
    "config:check": "npm run config:validate",
    "config:test": "node scripts/test-config-integration.js",
    "config:test-integration": "npm run config:test",
    "config:validate-contract": "node scripts/validate-config-contract.js",
    "config:debug": "node scripts/debug-config-integration.js",
    "env:validate": "npx tsx scripts/validate-environment.ts",
    "env:check": "npm run env:validate",
    "dev:start": "powershell -ExecutionPolicy Bypass -File scripts/start-dev.ps1",
    "dev:start:unix": "bash scripts/start-dev.sh",
    "dev:quick": "node scripts/quick-start.js",
    "dev:quick:start": "npm run dev:quick",
    "dev:monitor": "node scripts/dev-monitor.js",
    "dev:watch": "npm run dev:monitor",
    "dev:compose": "docker compose up --build",
    "dev:compose:obs": "docker compose --profile obs up --build",
    "db:test": "node scripts/test-db-connection.js",
    "redis:test": "node scripts/test-redis-connection.js",
    "services:health-check": "node scripts/health-check-all.js",
    "smoke:alpha": "node scripts/smoke-alpha.js",
    "hooks:enable": "git config core.hooksPath .githooks",
    "e2e:pw": "playwright test",
    "e2e:pw:ci": "playwright test --project=chromium --reporter=dot",
    "validate:schemas": "node scripts/validate-schemas.js"
  },
  "lint-staged": {
    "**/*.{ts,js,json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "fast-glob": "3.3.2",
    "js-yaml": "4.1.0"
  },
  "devDependencies": {
    "@stoplight/spectral-cli": "6.11.1",
    "eslint-formatter-compact": "8.40.0",
    "husky": "9.1.6",
    "lint-staged": "15.2.9",
    "prettier": "3.3.3",
    "tsx": "4.19.2",
    "typescript": "5.6.2",
    "eslint": "9.12.0",
    "@eslint/eslintrc": "3.1.0",
    "eslint-config-next": "15.1.6",
    "@typescript-eslint/eslint-plugin": "8.10.0",
    "@typescript-eslint/parser": "8.10.0",
    "eslint-plugin-import": "2.32.0"
  }
}
