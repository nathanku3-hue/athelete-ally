name: CI Diagnostics (npm ci)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # 匹配项目中的.nvmrc文件
  NODE_VERSION: '18.20.4'
  NPM_VERSION: '10.9.3'

jobs:
  npm-ci-diagnostics:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Pin npm version
        run: |
          npm i -g "npm@${NPM_VERSION}"
          npm -v

      - name: Print environment
        run: |
          echo "Node: $(node -v)"
          echo "npm : $(npm -v)"
          echo "::group::npm config list -l"
          npm config list -l || true
          echo "::endgroup::"
      
      - name: Check for nested lockfiles
        run: |
          if git ls-files '**/package-lock.json' | grep -v '^package-lock.json$'; then
            echo "❌ Found nested package-lock.json files:"
            git ls-files '**/package-lock.json' | grep -v '^package-lock.json$'
            exit 1
          else
            echo "✅ No nested lockfiles found"
          fi

      # 尝试1: 包含生命周期脚本 (postinstall等)
      - name: npm ci (foreground scripts)
        id: ci_fg
        continue-on-error: true
        run: |
          set -o pipefail
          npm ci --foreground-scripts 2>&1 | tee npm-ci-foreground.log

      # 尝试2: 隔离依赖图解析和生命周期脚本
      - name: npm ci (ignore scripts)
        id: ci_ign
        if: steps.ci_fg.outcome == 'failure'
        continue-on-error: true
        run: |
          set -o pipefail
          npm ci --ignore-scripts 2>&1 | tee npm-ci-ignore-scripts.log

      # 依赖树和去重诊断
      - name: Dump dependency tree
        run: |
          npm ls --all --json > npm-ls.json || true

      - name: Dedupe (dry-run)
        run: |
          # npm dedupe --dry-run 在最近的npm 10中支持
          npm dedupe --dry-run 2>&1 | tee npm-dedupe-dry-run.log || true

      # 安全概览 (不会阻塞作业)
      - name: npm audit (json)
        continue-on-error: true
        run: |
          npm audit --json > npm-audit.json || true

      # 总结结果以便快速分类
      - name: Summarize diagnostics
        run: |
          {
            echo "Node: $(node -v)"
            echo "npm : $(npm -v)"
            echo "npm ci (foreground scripts): ${{ steps.ci_fg.outcome }}"
            if [ "${{ steps.ci_fg.outcome }}" = "failure" ]; then
              echo "npm ci (ignore scripts): ${{ steps.ci_ign.outcome }}"
            fi
          } | tee diagnostics-summary.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: npm-ci-diagnostics-${{ github.run_id }}
          path: |
            npm-ci-foreground.log
            npm-ci-ignore-scripts.log
            npm-ls.json
            npm-dedupe-dry-run.log
            npm-audit.json
            diagnostics-summary.txt
          retention-days: 14

      # 可选: 仅在npm ci (foreground)成功时继续构建
      - name: Build (only if npm ci succeeded)
        if: steps.ci_fg.outcome == 'success'
        run: |
          npm run build
