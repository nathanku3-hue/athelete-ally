name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  docker-build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 45
      steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Dockerfile formatting
        shell: bash
        run: |
          test -f Dockerfile || { echo "Dockerfile not found at repo root"; exit 1; }
          LINES=$(wc -l < Dockerfile | tr -d '[:space:]')
          if [ "$LINES" -lt 5 ]; then
            echo "Dockerfile appears to be corrupted (only $LINES lines)." >&2
            exit 1
          fi
          echo "Dockerfile lines: $LINES"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta (safe tags)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag
            type=ref,event=pr
            type=sha,format=short,prefix=sha-

      - name: Login to GHCR (PAT if available)
        id: pat_login
        # Never reference `secrets.*` in `if` â€” it may not exist on PRs. Gate only on event.
        if: ${{ github.event_name != 'pull_request' }}
        continue-on-error: true
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to GHCR (fallback to GITHUB_TOKEN)
        # Only run if PAT login did not succeed
        if: ${{ github.event_name != 'pull_request' && steps.pat_login.outcome != 'success' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build (dry run, no push)
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push image
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
