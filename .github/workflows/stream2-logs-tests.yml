name: stream2-logs-tests
on:
  pull_request:
    branches: [ main ]

jobs:
  stream2-logs-tests:
    name: "Stream 2: Logs Tests"
    runs-on: ubuntu-latest
    env:
      LOGS_API_KEY: ${{ secrets.LOGS_API_KEY || 'dev-key' }}
      NODE_ENV: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install deps
        run: npm ci --workspaces --include-workspace-root --no-audit --no-fund
      - name: Install test dependencies (workaround peer dependency issue)
        run: |
          # npm refuses to install jest due to peer dependency constraints
          # Use yarn as workaround - it doesn't have the same peer dep restrictions
          npm install -g yarn
          yarn add --dev --ignore-workspace-root-check jest@29.7.0 ts-jest@29.4.4 babel-jest@29.7.0 @jest/core@29.7.0 @types/jest@29.5.14 jest-environment-jsdom@29.7.0
      - name: Build (turbo, no daemon)
        run: npm run build:all || npx turbo run build --no-daemon || echo "skip build"
      - name: Run Stream 2 Jest project
        run: |
          mkdir -p reports

          # Debug: Check what was installed
          echo "Checking jest installation..."
          ls -la node_modules/.bin/jest* || echo "No jest binary in .bin"
          ls -d node_modules/jest || echo "No jest package"
          ls node_modules/jest/bin/ || echo "No jest bin directory"

          # Use node to run jest directly
          echo "Running tests with jest..."
          node node_modules/jest/bin/jest.js --config jest/projects.stream2.cjs --runInBand --colors --json --outputFile=reports/stream2-logs-test.json --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT: reports/stream2-logs-junit.xml
      - name: Step Summary
        if: always()
        run: |
          node -e "const fs=require('fs');let p='reports/stream2-logs-test.json';if(!fs.existsSync(p)){console.log('No JSON report');process.exit(0)};const o=JSON.parse(fs.readFileSync(p,'utf8'));const s=o.numPassedTests||0;const f=o.numFailedTests||0;const u=o.numPendingTests||0;const suites=o.numTotalTestSuites||0;const out=\`Stream 2: Logs Tests\n- suites: \${suites}\n- passed: \${s}\n- failed: \${f}\n- pending: \${u}\`;console.log(out);fs.appendFileSync(process.env.GITHUB_STEP_SUMMARY, out+'\n');"
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: stream2-logs-tests
          path: reports/*
