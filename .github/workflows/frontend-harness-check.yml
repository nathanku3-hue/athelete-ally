name: Frontend Harness Check (jsdom)

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual verification'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sanity:
    uses: ./.github/workflows/_sanity-reuse.yml

  harness:
    name: Frontend Multi-Spec (PlanCard + useTrainingQueries)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: sanity
    steps:
      - name: Checkout (selected ref)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Setup Node 20 (no cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'
          cache: 'npm'
          cache-dependency-path: ${{ needs.sanity.outputs.cache-dependency-path }}

      - name: Force fresh install (no cache)
        run: |
          echo "=== Removing all npm cache and node_modules ==="
          rm -rf node_modules
          rm -rf ~/.npm
          npm cache clean --force
          echo "=== Installing with npm install (not ci) ==="
          # NOTE: Intentionally using npm install (not ci) for harness testing
          npm install --legacy-peer-deps --no-audit --no-fund

      - name: Verify Node.js and npm versions
        run: |
          node_version=$(node -v)
          npm_version=$(npm -v)
          echo "Node.js version: $node_version"
          echo "npm version: $npm_version"

          # Check Node.js version is 20.18.x
          if [[ ! $node_version =~ ^v20\.18\. ]]; then
            echo "❌ Error: Node.js version must be 20.18.x, got $node_version"
            exit 1
          fi

          # Check npm version is 10.x
          if [[ ! $npm_version =~ ^10\. ]]; then
            echo "❌ Error: npm version must be 10.x, got $npm_version"
            exit 1
          fi

          echo "✅ Version check passed: Node.js $node_version, npm $npm_version"

      - name: Print Jest version
        run: npm run jest:bin -- --version

      - name: Run frontend specs (jsdom)
        run: |
          npm run jest:bin -- apps/frontend/src/__tests__/components/PlanCard.test.tsx \
            apps/frontend/src/__tests__/hooks/useTrainingQueries.test.tsx \
            --runInBand --verbose --detectOpenHandles --forceExit

