name: Frontend Harness Check (jsdom)

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual verification'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  harness:
    name: Frontend Multi-Spec (PlanCard + useTrainingQueries)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout (selected ref)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: "Sanity: print ref and verify lock contains jsdom env"
        run: |
          set -euo pipefail
          echo "=== GIT BRANCH VERIFICATION ==="
          echo "GITHUB_REF=${GITHUB_REF}"
          echo "GITHUB_SHA=${GITHUB_SHA}"
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "Latest commit: $(git log -1 --oneline)"
          echo "=== PACKAGE-LOCK.JSON VERIFICATION ==="
          echo "Lock file size: $(wc -c < package-lock.json) bytes"
          echo "Lock file last modified: $(stat -c %y package-lock.json)"
          echo "=== CHECKING JSDOM DEPENDENCIES ==="
          if grep -q "\"jest-environment-jsdom\"" package-lock.json; then
            echo "✅ Lock includes jest-environment-jsdom"
          else
            echo "❌ Lock missing jsdom env"; exit 1
          fi
          if grep -q "\"jsdom\"" package-lock.json; then
            echo "✅ Lock includes jsdom"
          else
            echo "❌ Lock missing jsdom"
          fi
          if grep -q "\"@types/jsdom\"" package-lock.json; then
            echo "✅ Lock includes @types/jsdom"
          else
            echo "❌ Lock missing @types/jsdom"
          fi
      - name: "Discover lockfiles"
        run: |
          set -euo pipefail
          {
            echo "paths<<EOF"
            git ls-files -- '**/package-lock.json' || find . -type f -name 'package-lock.json' -not -path './node_modules/*'
            echo "EOF"
          } >> "${GITHUB_OUTPUT}"
      - name: Setup Node 20 (no cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Force fresh install (no cache)
        run: |
          echo "=== Removing all npm cache and node_modules ==="
          rm -rf node_modules
          rm -rf ~/.npm
          npm cache clean --force
          echo "=== Installing with npm install (not ci) ==="
          npm install --legacy-peer-deps --no-audit --no-fund

      - name: Print Jest version
        run: npx jest --version

      - name: Run frontend specs (jsdom)
        run: |
          npx jest apps/frontend/src/__tests__/components/PlanCard.test.tsx \
            apps/frontend/src/__tests__/hooks/useTrainingQueries.test.tsx \
            --runInBand --verbose --detectOpenHandles --forceExit

