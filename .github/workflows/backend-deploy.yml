concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

name: Backend Deploy

on:
  push:
    branches: [main]
    paths: ['services/planning-engine/**']
  pull_request:
    branches: [main]
    paths: ['services/planning-engine/**']

jobs:
  sanity:
    uses: ./.github/workflows/_sanity-reuse.yml

  test:
    runs-on: ubuntu-latest
    needs: sanity
    steps:
      - name: Checkout (pinned ref)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'
          cache: 'npm'
          cache-dependency-path: ${{ needs.sanity.outputs.cache-dependency-path }}
      
      - name: Install dependencies (root level)
        run: npm ci --workspaces --include-workspace-root --no-audit --no-fund
      - name: Build event-bus package
        run: npm run build -w packages/event-bus

      - name: Build shared packages
        run: |
          npm run build -w @athlete-ally/shared
          npm run build -w @athlete-ally/shared-types

      - name: Run linting (workspace)
        run: npm run lint -w services/planning-engine
      
      - name: Generate Prisma client
        run: |
          set -euo pipefail
          echo "?? Generating Prisma client for planning-engine..."
          chmod +x "$GITHUB_WORKSPACE/scripts/ci/prisma-generate.sh"
          "$GITHUB_WORKSPACE/scripts/ci/prisma-generate.sh" services/planning-engine
        env:
          PRISMA_ENGINES_MIRROR: ${{ secrets.PRISMA_ENGINES_MIRROR }}
      
      - name: Run tests (workspace)
        run: npm run test -w services/planning-engine
      
      - name: Build application (workspace)
        run: npm run build -w services/planning-engine

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout (pinned ref)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      
      - name: Build Docker image
        run: |
          docker build -t athlete-ally/planning-engine:latest -f services/planning-engine/Dockerfile .
      
      - name: Deploy to production
        run: |
          echo "Deploying to production..."
          # ???????????
