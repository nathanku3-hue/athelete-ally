name: Backend Deploy

on:
  push:
    branches: [main]
    paths: ['services/planning-engine/**']
  pull_request:
    branches: [main]
    paths: ['services/planning-engine/**']

jobs:
  sanity:
    uses: ./.github/workflows/_sanity-reuse.yml

  test:
    runs-on: ubuntu-latest
    needs: sanity
    steps:
      - name: Checkout (pinned ref)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'
          cache: 'npm'
          cache-dependency-path: ${{ needs.sanity.outputs.cache-dependency-path }}
      
      - name: Install dependencies (root level)
        run: npm ci
      
      - name: Run linting (workspace)
        run: npm run lint -w services/planning-engine
      
      - name: Generate Prisma client
        run: |
          set -euo pipefail
          echo "ðŸ”§ Generating Prisma client for planning-engine..."
          npm run db:generate -w services/planning-engine || (cd services/planning-engine && npx prisma generate)
      
      - name: Run tests (workspace)
        run: npm run test -w services/planning-engine
      
      - name: Build application (workspace)
        run: npm run build -w services/planning-engine

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout (pinned ref)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      
      - name: Build Docker image
        run: |
          cd services/planning-engine
          docker build -t athlete-ally/planning-engine:latest .
      
      - name: Deploy to production
        run: |
          echo "Deploying to production..."
          # è¿™é‡Œæ·»åŠ å®žé™…çš„éƒ¨ç½²å‘½ä»¤

