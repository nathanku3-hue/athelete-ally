openapi: 3.0.3
info:
  title: athlete-ally contracts
  version: 0.1.0
servers:
  - url: http://localhost:4000
paths:
  /health:
    get:
      summary: health check
      responses:
        '200':
          description: ok
  /v1/onboarding:
    post:
      summary: submit onboarding profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingPayload'
      responses:
        '202':
          description: accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAccepted'
  /v1/plans/generate:
    post:
      summary: trigger plan generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanGenerateRequest'
      responses:
        '202':
          description: accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAccepted'
  /api/v1/ingest/sleep:
    post:
      summary: ingest raw Sleep data
      tags:
        - Ingestion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SleepIngestRequest'
            examples:
              basic:
                summary: Basic sleep data
                value:
                  userId: "user-123"
                  date: "2025-10-02"
                  durationMinutes: 420
              with_metadata:
                summary: With vendor metadata and quality score
                value:
                  userId: "user-456"
                  date: "2025-10-02"
                  durationMinutes: 480
                  raw:
                    source: "oura"
                    qualityScore: 85
      responses:
        '200':
          description: Sleep data ingested successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestResponse'
              examples:
                success:
                  value:
                    message: "Sleep data ingested successfully"
                    eventId: "evt_abc123def456"
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                missing_field:
                  value:
                    error: "Validation failed"
                    details: ["date: Required"]
                invalid_duration:
                  value:
                    error: "Validation failed"
                    details: ["durationMinutes: Number must be greater than or equal to 0"]
        '500':
          description: Internal server error
components:
  schemas:
    OnboardingPayload:
      type: object
      properties:
        userId:
          type: string
        purpose:
          type: string
        proficiency:
          type: string
          enum: [beginner, intermediate, advanced]
        season:
          type: string
          enum: [offseason, preseason, inseason]
        availabilityDays:
          type: integer
          minimum: 1
          maximum: 7
        weeklyGoalDays:
          type: integer
          minimum: 1
          maximum: 7
          description: 'User preferred weekly training goal days'
        equipment:
          type: array
          items:
            type: string
        fixedSchedules:
          type: array
          items:
            type: object
            properties:
              day:
                type: string
              start:
                type: string
              end:
                type: string
    PlanGenerateRequest:
      type: object
      properties:
        userId:
          type: string
        seedPlanId:
          type: string
      required: [userId]
    JobAccepted:
      type: object
      properties:
        jobId:
          type: string
        status:
          type: string
          enum: [queued]
    SleepIngestRequest:
      type: object
      required: [userId, date, durationMinutes]
      properties:
        userId:
          type: string
          minLength: 1
        date:
          type: string
          format: date
          pattern: '^\d{4}-\d{2}-\d{2}$'
          description: 'Sleep date in ISO format (YYYY-MM-DD)'
        durationMinutes:
          type: integer
          minimum: 0
          description: 'Total sleep duration in minutes (non-negative)'
        raw:
          type: object
          description: 'Vendor-specific metadata'
          properties:
            source:
              type: string
              description: 'Vendor name (e.g., "oura", "whoop")'
              example: 'oura'
            qualityScore:
              type: number
              minimum: 0
              maximum: 100
              description: 'Sleep quality score (0-100, values outside range will be clamped during normalization)'
              example: 85
          additionalProperties: true
    IngestResponse:
      type: object
      properties:
        message:
          type: string
          example: 'Sleep data ingested successfully'
        eventId:
          type: string
          description: 'Auto-generated event ID (UUID)'
    ValidationError:
      type: object
      properties:
        error:
          type: string
          example: 'Validation failed'
        details:
          type: array
          items:
            type: string
          example: ['date: Required']