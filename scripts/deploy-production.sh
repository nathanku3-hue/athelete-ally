#!/bin/bash

# Phase 2 ??????
# ???????????

set -e

echo "?? ??Phase 2????..."

# ????
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# ????
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# ??Docker????
check_docker() {
    log_info "??Docker??..."
    if ! docker info > /dev/null 2>&1; then
        log_error "Docker???????Docker Desktop"
        exit 1
    fi
    log_success "Docker????"
}

# ????????
check_ports() {
    log_info "???????..."
    
    # ??????3000
    if lsof -Pi :3000 -sTCP:LISTEN -t >/dev/null 2>&1; then
        log_warning "??3000?????????????..."
        docker stop frontend 2>/dev/null || true
        docker rm frontend 2>/dev/null || true
    fi
    
    # ??????4102
    if lsof -Pi :4102 -sTCP:LISTEN -t >/dev/null 2>&1; then
        log_warning "??4102?????????????..."
        docker stop planning-engine 2>/dev/null || true
        docker rm planning-engine 2>/dev/null || true
    fi
    
    log_success "??????"
}

# ??????
build_frontend() {
    log_info "????Docker??..."
    
    if docker build -t athlete-ally/frontend:latest -f Dockerfile .; then
        log_success "????????"
    else
        log_error "????????"
        exit 1
    fi
}

# ??????
start_frontend() {
    log_info "??????..."
    
    if docker run -d -p 3000:3000 --name frontend --restart unless-stopped athlete-ally/frontend:latest; then
        log_success "????????"
    else
        log_error "????????"
        exit 1
    fi
}

# ??????
start_backend() {
    log_info "??????..."
    
    if docker run -d -p 4102:4102 --name planning-engine --restart unless-stopped athlete-ally/planning-engine:simple; then
        log_success "????????"
    else
        log_warning "?????????????..."
    fi
}

# ??????
start_monitoring() {
    log_info "??????..."
    
    if docker compose -f docker-compose/preview.yml up -d prometheus grafana postgres redis nats; then
        log_success "????????"
    else
        log_warning "?????????????..."
    fi
}

# ????
health_check() {
    log_info "??????..."
    
    # ??????
    sleep 10
    
    # ??????
    if curl -f http://localhost:3000/api/health > /dev/null 2>&1; then
        log_success "??????????"
    else
        log_error "??????????"
        return 1
    fi
    
    # ??????
    if curl -f http://localhost:4102/health > /dev/null 2>&1; then
        log_success "??????????"
    else
        log_error "??????????"
        return 1
    fi
    
    # ??????
    if curl -f http://localhost:9090/-/healthy > /dev/null 2>&1; then
        log_success "??????????"
    else
        log_warning "???????????????????"
    fi
}

# ??????
show_status() {
    log_info "??????..."
    
    echo ""
    echo "?? ????:"
    echo "=================="
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    
    echo ""
    echo "?? ????:"
    echo "=================="
    echo "????: http://localhost:3000"
    echo "??API: http://localhost:4102"
    echo "API??: http://localhost:4102/docs"
    echo "????: http://localhost:9090"
    echo "Grafana: http://localhost:3001"
    
    echo ""
    echo "?? ????:"
    echo "=================="
    echo "????: docker logs frontend"
    echo "????: docker stop frontend planning-engine"
    echo "????: docker restart frontend planning-engine"
    echo "????: docker ps"
}

# ????
run_tests() {
    log_info "????????..."
    
    if npm run test:api; then
        log_success "API????"
    else
        log_warning "API??????????????"
    fi
    
    if npm run test:frontend; then
        log_success "??????"
    else
        log_warning "????????????????"
    fi
}

# ???
main() {
    echo "?? Phase 2 ??????"
    echo "========================"
    
    check_docker
    check_ports
    build_frontend
    start_frontend
    start_backend
    start_monitoring
    
    if health_check; then
        log_success "??????????"
    else
        log_warning "????????????????"
    fi
    
    run_tests
    show_status
    
    echo ""
    log_success "?? Phase 2 ???????"
    echo ""
    echo "?????????????"
    echo "??????????????????"
}

# ?????
main "$@"









