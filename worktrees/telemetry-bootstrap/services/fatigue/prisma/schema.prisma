// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("FATIGUE_DATABASE_URL")
}

model FatigueAssessment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  userId    String
  sessionId String?  // Optional session reference
  
  // Fatigue levels (1-5 scale)
  overallFatigue    Int      // Overall fatigue level
  physicalFatigue   Int      // Physical tiredness
  mentalFatigue     Int      // Mental tiredness
  sleepQuality      Int      // Sleep quality (1-5)
  stressLevel       Int      // Stress level (1-5)
  
  // Additional context
  notes             String?  // User notes
  previousWorkout   String?  // Last workout type
  timeSinceLastWorkout Int?  // Hours since last workout
  
  // Assessment metadata
  assessmentType    String   // 'pre_workout', 'post_workout', 'daily'
  isActive          Boolean  @default(true)
  
  @@map("fatigue_assessments")
}

model TrainingAdjustment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  userId    String
  sessionId String?  // Optional session reference
  planId    String?  // Reference to training plan
  
  // Adjustment details
  adjustmentType    String   // 'intensity', 'volume', 'exercise_substitution', 'rest'
  originalValue     Json     // Original training parameter
  adjustedValue     Json     // Adjusted training parameter
  reason            String   // Reason for adjustment
  confidence        Float    // Confidence level (0-1)
  
  // Context
  fatigueLevel      Int      // Fatigue level that triggered adjustment
  exerciseId        String?  // If exercise-specific adjustment
  exerciseName      String?  // Exercise name for reference
  
  // Status
  isApplied         Boolean  @default(false)
  appliedAt         DateTime?
  userFeedback      String?  // User feedback on adjustment
  
  @@map("training_adjustments")
}

model FatiguePattern {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  userId    String
  
  // Pattern data
  dayOfWeek         Int      // 1-7 (Monday-Sunday)
  timeOfDay         Int      // Hour of day (0-23)
  averageFatigue    Float    // Average fatigue for this time
  sampleCount       Int      // Number of assessments
  
  // Pattern metadata
  isActive          Boolean  @default(true)
  lastUpdated       DateTime @default(now())
  
  @@unique([userId, dayOfWeek, timeOfDay])
  @@map("fatigue_patterns")
}

model UserFatigueProfile {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  userId    String   @unique
  
  // User preferences
  autoAdjustEnabled Boolean  @default(true)
  adjustmentSensitivity Float @default(0.5) // 0-1, how sensitive to fatigue
  preferredAdjustmentTypes String[] // Types of adjustments user prefers
  
  // Fatigue thresholds
  lowFatigueThreshold    Int @default(2)    // Below this = low fatigue
  highFatigueThreshold   Int @default(4)    // Above this = high fatigue
  
  // Learning data
  totalAssessments       Int @default(0)
  totalAdjustments       Int @default(0)
  userSatisfactionScore  Float? // Average satisfaction with adjustments
  
  @@map("user_fatigue_profiles")
}

