From c7cb5fc4aa8ef29cdea9642835ab0456963b29b5 Mon Sep 17 00:00:00 2001
From: Release Bot <release-bot@local>
Date: Fri, 3 Oct 2025 01:02:09 +0800
Subject: [PATCH] docs(observability): add silencing/threshold tuning and soak
 schema; README notes on variables and no-data

---
 docs/runbook/sleep-troubleshooting.md | 24 +++++++++++++++++++++++-
 services/normalize-service/README.md  |  6 +++++-
 2 files changed, 28 insertions(+), 2 deletions(-)

diff --git a/docs/runbook/sleep-troubleshooting.md b/docs/runbook/sleep-troubleshooting.md
index 36aa565..12b3bbb 100644
--- a/docs/runbook/sleep-troubleshooting.md
+++ b/docs/runbook/sleep-troubleshooting.md
@@ -20,4 +20,26 @@
 
 - Soak script output
   - Example: docs/examples/soak_sleep_summary.example.json
-  - Live run: ./soak_sleep_summary.json generated by docs/phase-3/ops/48h-soak-health-check.sh
\ No newline at end of file
+  - Live run: ./soak_sleep_summary.json generated by docs/phase-3/ops/48h-soak-health-check.sh## Alert Silencing and Threshold Tuning
+
+- Silencing (mute):
+  - Create a silence for rules in group sleep-pipeline via your Alertmanager UI.
+  - Scope by labels: service=normalize-service, stream=AA_CORE_HOT, durable=normalize-sleep-durable, subject=athlete-ally.sleep.raw-received.
+  - Suggested duration: 15â€“60m during maintenance; remove after validation.
+- Threshold tuning:
+  - DLQ rate (warn): adjust rate() window or comparator if transient spikes cause noise.
+  - No successes (crit): extend for: from 5m to 10m only if known backfills or scheduled maintenance.
+  - Use `promtool check rules monitoring/alert_rules.yml` after edits.
+
+## Soak JSON Schema (sleep)
+
+- Fields:
+  - generated_at: string ISO8601
+  - window_minutes: integer
+  - job, stream, durable, subject: strings
+  - success_count, dlq_count, retry_count: integers
+  - success_rate, dlq_rate, retry_rate: numbers 0..1
+  - pending_current, pending_max: integers
+  - fallback_count: integer
+  - notes: optional string
+- Example: docs/examples/soak_sleep_summary.example.json
diff --git a/services/normalize-service/README.md b/services/normalize-service/README.md
index 39564b8..1611771 100644
--- a/services/normalize-service/README.md
+++ b/services/normalize-service/README.md
@@ -35,4 +35,8 @@ for (const m of msgs) { console.log('headers:', m.headers?.toString?.()); m.ack(
 - WARN: DLQ rate > 0 for 5m
 - WARN: Lag > 100 for 5m (placeholder if exporter missing)
 - CRIT: No successes in 5m
-- Runbook: docs/runbook/sleep-troubleshooting.md
\ No newline at end of file
+- Runbook: docs/runbook/sleep-troubleshooting.md
+### Dashboard Variables and No-Data Behavior
+- Variables: job (default normalize), stream (AA_CORE_HOT), durable (normalize-sleep-durable), subject (default athlete-ally.sleep.raw-received).
+- If panels show "No data": confirm service is running, Prometheus is scraping, and variable labels match your env.
+- Import path: monitoring/grafana/dashboards/normalize-sleep.json (UID: aa-sleep-norm).
-- 
2.50.0.windows.1

