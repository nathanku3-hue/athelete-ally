# Multi-stage build (monorepo-aware, Node 20)FROM node:20.18.0-alpine AS baseRUN apk add --no-cache libc6-compat curlWORKDIR /app# Dependencies layer (dev deps for build)FROM base AS depsCOPY package.json package-lock.json* ./RUN npm ci --ignore-scripts && npm cache clean --force# Builder (root build compiles monorepo; Next.js app at apps/frontend)FROM base AS builderWORKDIR /appCOPY --from=deps /app/package.json /app/package-lock.json ./COPY . .RUN npm ci && npm run build# Runtime (non-root, minimal)FROM base AS runnerWORKDIR /appENV NODE_ENV=productionENV NEXT_TELEMETRY_DISABLED=1# Create non-root userRUN addgroup --system --gid 1001 nodejs  && adduser --system --uid 1001 nextjs# Copy Next.js standalone outputCOPY --from=builder /app/apps/frontend/public ./publicCOPY --from=builder /app/apps/frontend/.next/standalone ./COPY --from=builder /app/apps/frontend/.next/static ./.next/static# PermissionsRUN chown -R nextjs:nodejs /appUSER nextjsEXPOSE 3000ENV PORT=3000ENV HOSTNAME=0.0.0.0# HEALTHCHECK to in-app endpointHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3   CMD curl -fsS http://localhost:3000/api/health || exit 1CMD ["node", "server.js"]