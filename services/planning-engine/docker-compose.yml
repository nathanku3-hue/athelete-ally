version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: planning_engine
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2.9-alpine
    ports:
      - "4223:4222"
    command: ["--jetstream", "--store_dir", "/data"]
    volumes:
      - nats_data:/data
    healthcheck:
      test: ["CMD", "nats", "server", "check", "jetstream"]
      interval: 10s
      timeout: 5s
      retries: 5

  planning-engine:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4102:4102"
    environment:
      - NODE_ENV=production
      - PLANNING_DATABASE_URL=postgresql://postgres:password@postgres:5432/planning_engine
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4223
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4102/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:
  nats_data:
