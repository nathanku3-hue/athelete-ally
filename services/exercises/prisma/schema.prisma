// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("EXERCISES_DATABASE_URL")
}

model Exercise {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Basic Information
  name        String
  description String
  category    String   // Push, Pull, Legs, Core, Cardio, etc.
  subcategory String?  // Chest, Back, Shoulders, etc.
  
  // Equipment and Setup
  equipment   String[] // Array of required equipment
  setup       String?  // Setup instructions
  
  // Difficulty and Progression
  difficulty  Int      // 1-5 scale
  progression String?  // How to progress this exercise
  
  // Target Muscles
  primaryMuscles    String[] // Main muscles worked
  secondaryMuscles  String[] // Supporting muscles
  
  // Media and Instructions
  instructions      String   // Step-by-step instructions
  tips              String?  // Pro tips and common mistakes
  videoUrl          String?  // Link to demonstration video
  imageUrl          String?  // Link to exercise image
  
  // Safety and Modifications
  safetyNotes       String?  // Safety considerations
  modifications     Json?    // Array of modifications (easier/harder)
  contraindications String?  // When not to do this exercise
  
  // Metadata
  tags              String[] // Searchable tags
  isActive          Boolean  @default(true)
  popularity        Int      @default(0) // Usage count
  
  // Relations
  exerciseVariations ExerciseVariation[]
  userRatings        ExerciseRating[]
  
  @@map("exercises")
}

model ExerciseVariation {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  exerciseId String
  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
  
  name        String
  description String
  difficulty  Int      // 1-5 scale
  instructions String
  tips        String?
  videoUrl    String?
  imageUrl    String?
  
  @@map("exercise_variations")
}

model ExerciseRating {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  exerciseId String
  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
  
  userId    String
  rating    Int      // 1-5 scale
  difficulty Int     // 1-5 scale (how hard they found it)
  comment   String?
  
  @@unique([exerciseId, userId])
  @@map("exercise_ratings")
}

model ExerciseCategory {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  name        String   @unique
  description String
  icon        String?  // Icon name or URL
  color       String?  // Hex color code
  order       Int      @default(0)
  
  @@map("exercise_categories")
}

