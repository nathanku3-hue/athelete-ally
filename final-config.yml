name: athlete-ally-original
services:
  analytics:
    build:
      context: E:\vibe\athlete-ally-original\services\analytics
      dockerfile: Dockerfile
    command:
      - npm
      - run
      - dev
    depends_on:
      nats:
        condition: service_started
        required: true
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_started
        required: true
    environment:
      ANALYTICS_DATABASE_URL: postgresql://athlete:athlete@postgres:5432/athlete_analytics
      NATS_HOST: nats
      NATS_PORT: "4222"
      NATS_URL: nats://nats:4222
      NODE_ENV: development
      PORT: "4106"
      POSTGRES_DB: athlete
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: athlete
      POSTGRES_PORT: "5432"
      POSTGRES_USER: athlete
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      REDIS_URL: redis://redis:6379
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4106
        published: "4106"
        protocol: tcp
    volumes:
      - type: bind
        source: E:\vibe\athlete-ally-original\services\analytics
        target: /usr/src/app
        bind:
          create_host_path: true
      - type: volume
        target: /usr/src/app/node_modules
        volume: {}
  exercises:
    build:
      context: E:\vibe\athlete-ally-original\services\exercises
      dockerfile: Dockerfile
    command:
      - npm
      - run
      - dev
    depends_on:
      nats:
        condition: service_started
        required: true
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_started
        required: true
    environment:
      EXERCISES_DATABASE_URL: postgresql://athlete:athlete@postgres:5432/athlete_exercises
      NATS_HOST: nats
      NATS_PORT: "4222"
      NATS_URL: nats://nats:4222
      NODE_ENV: development
      PORT: "4103"
      POSTGRES_DB: athlete
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: athlete
      POSTGRES_PORT: "5432"
      POSTGRES_USER: athlete
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      REDIS_URL: redis://redis:6379
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4103
        published: "4103"
        protocol: tcp
    volumes:
      - type: bind
        source: E:\vibe\athlete-ally-original\services\exercises
        target: /usr/src/app
        bind:
          create_host_path: true
      - type: volume
        target: /usr/src/app/node_modules
        volume: {}
  fatigue:
    build:
      context: E:\vibe\athlete-ally-original\services\fatigue
      dockerfile: Dockerfile
    command:
      - npm
      - run
      - dev
    depends_on:
      nats:
        condition: service_started
        required: true
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_started
        required: true
    environment:
      FATIGUE_DATABASE_URL: postgresql://athlete:athlete@postgres:5432/athlete_fatigue
      NATS_HOST: nats
      NATS_PORT: "4222"
      NATS_URL: nats://nats:4222
      NODE_ENV: development
      PORT: "4104"
      POSTGRES_DB: athlete
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: athlete
      POSTGRES_PORT: "5432"
      POSTGRES_USER: athlete
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      REDIS_URL: redis://redis:6379
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4104
        published: "4104"
        protocol: tcp
    volumes:
      - type: bind
        source: E:\vibe\athlete-ally-original\services\fatigue
        target: /usr/src/app
        bind:
          create_host_path: true
      - type: volume
        target: /usr/src/app/node_modules
        volume: {}
  gateway-bff:
    build:
      context: E:\vibe\athlete-ally-original\apps\gateway-bff
      dockerfile: Dockerfile
    command:
      - npm
      - run
      - dev
    environment:
      ANALYTICS_URL: http://analytics:4106
      CORS_ALLOW_CREDENTIALS: "true"
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001
      EXERCISES_URL: http://exercises:4103
      FATIGUE_URL: http://fatigue:4104
      NATS_HOST: nats
      NATS_PORT: "4222"
      NODE_ENV: development
      PLANNING_ENGINE_URL: http://planning-engine:4102
      PORT: "4000"
      POSTGRES_DB: athlete
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: athlete
      POSTGRES_PORT: "5432"
      POSTGRES_USER: athlete
      PROFILE_ONBOARDING_URL: http://profile-onboarding:4101
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      WORKOUTS_URL: http://workouts:4105
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4000
        published: "4000"
        protocol: tcp
    volumes:
      - type: bind
        source: E:\vibe\athlete-ally-original\apps\gateway-bff
        target: /usr/src/app
        bind:
          create_host_path: true
      - type: volume
        target: /usr/src/app/node_modules
        volume: {}
  grafana:
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    image: grafana/grafana:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3000
        published: "3001"
        protocol: tcp
    volumes:
      - type: bind
        source: E:\vibe\athlete-ally-original\monitoring\grafana\dashboards
        target: /var/lib/grafana/dashboards
        bind:
          create_host_path: true
      - type: bind
        source: E:\vibe\athlete-ally-original\monitoring\grafana\provisioning
        target: /etc/grafana/provisioning
        bind:
          create_host_path: true
  jaeger:
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    image: jaegertracing/all-in-one:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 16686
        published: "16686"
        protocol: tcp
      - mode: ingress
        target: 14268
        published: "14268"
        protocol: tcp
  nats:
    command:
      - -js
      - -m
      - "8222"
    expose:
      - "4222"
      - "8222"
    image: nats:2.10-alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4222
        published: "4222"
        protocol: tcp
      - mode: ingress
        target: 8222
        published: "8222"
        protocol: tcp
  planning-engine:
    build:
      context: E:\vibe\athlete-ally-original\services\planning-engine
      dockerfile: Dockerfile
    command:
      - npm
      - run
      - dev
    depends_on:
      nats:
        condition: service_started
        required: true
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_started
        required: true
    environment:
      NATS_HOST: nats
      NATS_PORT: "4222"
      NATS_URL: nats://nats:4222
      NODE_ENV: development
      OPENAI_API_KEY: YOUR_OPENAI_API_KEY
      PLANNING_DATABASE_URL: postgresql://athlete:athlete@postgres:5432/athlete_planning
      PORT: "4102"
      POSTGRES_DB: athlete
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: athlete
      POSTGRES_PORT: "5432"
      POSTGRES_USER: athlete
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      REDIS_URL: redis://redis:6379
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4102
        published: "4102"
        protocol: tcp
    volumes:
      - type: bind
        source: E:\vibe\athlete-ally-original\services\planning-engine
        target: /usr/src/app
        bind:
          create_host_path: true
      - type: volume
        target: /usr/src/app/node_modules
        volume: {}
  postgres:
    environment:
      POSTGRES_DB: athlete
      POSTGRES_PASSWORD: athlete
      POSTGRES_USER: athlete
    expose:
      - "5432"
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U athlete -d athlete
      timeout: 5s
      interval: 5s
      retries: 5
    image: postgres:16-alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: bind
        source: E:\vibe\athlete-ally-original\scripts
        target: /docker-entrypoint-initdb.d
        bind:
          create_host_path: true
  profile-onboarding:
    build:
      context: E:\vibe\athlete-ally-original\services\profile-onboarding
      dockerfile: Dockerfile
    command:
      - npm
      - run
      - dev
    depends_on:
      nats:
        condition: service_started
        required: true
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_started
        required: true
    environment:
      NATS_HOST: nats
      NATS_PORT: "4222"
      NATS_URL: nats://nats:4222
      NODE_ENV: development
      PORT: "4101"
      POSTGRES_DB: athlete
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: athlete
      POSTGRES_PORT: "5432"
      POSTGRES_USER: athlete
      PROFILE_DATABASE_URL: postgresql://athlete:athlete@postgres:5432/athlete_profile
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      REDIS_URL: redis://redis:6379
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4101
        published: "4101"
        protocol: tcp
    volumes:
      - type: bind
        source: E:\vibe\athlete-ally-original\services\profile-onboarding
        target: /usr/src/app
        bind:
          create_host_path: true
      - type: volume
        target: /usr/src/app/node_modules
        volume: {}
  prometheus:
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    image: prom/prometheus:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 9090
        published: "9090"
        protocol: tcp
    volumes:
      - type: bind
        source: E:\vibe\athlete-ally-original\monitoring\prometheus.yml
        target: /etc/prometheus/prometheus.yml
        bind:
          create_host_path: true
  redis:
    expose:
      - "6379"
    image: redis:7-alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
  web:
    build:
      context: E:\vibe\athlete-ally-original
      dockerfile: Dockerfile
    command:
      - npm
      - run
      - dev
    depends_on:
      gateway-bff:
        condition: service_started
        required: true
      planning-engine:
        condition: service_started
        required: true
      profile-onboarding:
        condition: service_started
        required: true
    environment:
      NODE_ENV: development
      PORT: "3000"
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3000
        published: "3000"
        protocol: tcp
    volumes:
      - type: bind
        source: E:\vibe\athlete-ally-original\src
        target: /app/src
        bind:
          create_host_path: true
      - type: bind
        source: E:\vibe\athlete-ally-original\packages
        target: /app/packages
        bind:
          create_host_path: true
      - type: bind
        source: E:\vibe\athlete-ally-original\public
        target: /app/public
        bind:
          create_host_path: true
      - type: bind
        source: E:\vibe\athlete-ally-original\next.config.mjs
        target: /app/next.config.mjs
        bind:
          create_host_path: true
      - type: bind
        source: E:\vibe\athlete-ally-original\tailwind.config.mjs
        target: /app/tailwind.config.mjs
        bind:
          create_host_path: true
      - type: bind
        source: E:\vibe\athlete-ally-original\postcss.config.mjs
        target: /app/postcss.config.mjs
        bind:
          create_host_path: true
      - type: bind
        source: E:\vibe\athlete-ally-original\tsconfig.json
        target: /app/tsconfig.json
        bind:
          create_host_path: true
      - type: bind
        source: E:\vibe\athlete-ally-original\tsconfig.base.json
        target: /app/tsconfig.base.json
        bind:
          create_host_path: true
      - type: bind
        source: E:\vibe\athlete-ally-original\package.json
        target: /app/package.json
        bind:
          create_host_path: true
      - type: volume
        target: /app/node_modules
        volume: {}
  workouts:
    build:
      context: E:\vibe\athlete-ally-original\services\workouts
      dockerfile: Dockerfile
    command:
      - npm
      - run
      - dev
    depends_on:
      nats:
        condition: service_started
        required: true
      postgres:
        condition: service_healthy
        required: true
      redis:
        condition: service_started
        required: true
    environment:
      NATS_HOST: nats
      NATS_PORT: "4222"
      NATS_URL: nats://nats:4222
      NODE_ENV: development
      PORT: "4105"
      POSTGRES_DB: athlete
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: athlete
      POSTGRES_PORT: "5432"
      POSTGRES_USER: athlete
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      REDIS_URL: redis://redis:6379
      WORKOUTS_DATABASE_URL: postgresql://athlete:athlete@postgres:5432/athlete_workouts
    networks:
      default: null
    ports:
      - mode: ingress
        target: 4105
        published: "4105"
        protocol: tcp
    volumes:
      - type: bind
        source: E:\vibe\athlete-ally-original\services\workouts
        target: /usr/src/app
        bind:
          create_host_path: true
      - type: volume
        target: /usr/src/app/node_modules
        volume: {}
networks:
  default:
    name: athlete-ally-original_default
